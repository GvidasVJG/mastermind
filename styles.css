/* Reset / Base */
body {
  margin: 0;
  padding: 0;
  font-family: sans-serif;
  background: #f8f9fa;
}

/* Container */
.game-container {
  max-width: 650px;
  margin: 2rem auto;
  padding: 1rem;
  display: flex;
  flex-direction: column;
  background: white;
  border-radius: 6px;
  box-shadow: 0 0 10px rgba(0,0,0,0.1);
}

h1, h2, h3 {
  margin-top: 0;
}

/* Secret code creation */
.code-creation {
  display: flex;
  /* align-items: center; */
  gap: 1rem;
  margin: 1rem 0;
}
.secret-row {
  display: flex;
  gap: 1rem;
}
#lockCodeBtn {
  cursor: pointer;
}

/* Board layout: each guess row is a flex container
   so holes + feedback text are side by side */
.board {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}
.guess-row {
  display: flex;
  align-items: center; 
  justify-content: flex-start;
  gap: 2rem; /* space between holes and feedback text */
}

/* Container holding the holes */
.row-holes {
  display: flex;
  gap: 1rem;
}

/* Holes (bubbles) */
.hole {
  width: 45px;
  height: 45px;
  background-color: #e2e2e2; /* empty hole color */
  border-radius: 50%;
  cursor: pointer;
  border: 2px solid #333; /* Outline for each bubble */
  box-sizing: border-box;
  position: relative;
}

/* Gray out the locked secret code row */
.locked .hole {
  filter: grayscale(100%) contrast(0);
}

/* Feedback text container in guess row */
.row-feedback {
  font-weight: bold;
  min-width: 120px; /* so it doesn't jump around */
}

/* Palette */
.palette {
  margin: 2rem 0;
}
.palette h2 {
  margin-bottom: 0.5rem;
}
.color-swatch {
  display: inline-block;
  width: 34px;
  height: 34px;
  border-radius: 50%;
  margin-right: 8px;
  cursor: pointer;
  border: 2px solid #ffffff;
  box-shadow: 0 0 2px rgba(0,0,0,0.2);
}

.floating-palette {
  position: absolute;
  display: none;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(2, 1fr);
  background: white;
  padding: 10px;
  border-radius: 8px;
  box-shadow: 0 2px 10px rgba(0,0,0,0.2);
  z-index: 1000;
}

.floating-palette .color-swatch {
  margin: 4px;
}

/* Example color classes */
.color-red    { background-color: #dc3545; }
.color-blue   { background-color: #0d6efd; }
.color-green  { background-color: #198754; }
.color-orange { background-color: #fd7e14; }
.color-yellow { background-color: #ffc107; }
.color-brown  { background-color: #795548; }
.color-purple { background-color: #6f42c1; }
.color-cyan   { background-color: #00c1dd; }

/* Buttons */
button {
  padding: 0.5rem 1rem;
  margin-top: 1rem;
  background-color: #007bff;
  border: none;
  color: white;
  cursor: pointer;
  border-radius: 4px;
}
button:disabled {
  background-color: #6c757d;
  cursor: not-allowed;
}

/* Reset container */
.reset-container {
  text-align: center;
  margin: 1rem 0;
}

.reset-container button {
  background-color: #6c757d;
}

.reset-container button:hover {
  background-color: #5a6268;
}

/* Status message */
#status {
  margin-top: 1rem;
  font-weight: bold;
}

/* Final code display */
.final-code {
  margin-top: 2rem;
}

.game-mode {
  margin: 1rem 0;
  text-align: center;
}

.mode-switch {
  display: inline-block;
  margin: 1rem 0;
}

.mode-switch input[type="checkbox"] {
  display: none;
}

.mode-switch label {
  display: flex;
  align-items: center;
  gap: 10px;
  cursor: pointer;
}

.mode-text {
  font-weight: bold;
  color: #6c757d;
}

input:checked ~ label .single,
input:not(:checked) ~ label .multi {
  color: #6c757d;
}

input:checked ~ label .multi,
input:not(:checked) ~ label .single {
  color: #007bff;
}

.slider {
  position: relative;
  width: 60px;
  height: 30px;
  background: #e2e2e2;
  border-radius: 15px;
  transition: 0.3s;
}

.slider:before {
  content: '';
  position: absolute;
  top: 4px;
  left: 4px;
  width: 22px;
  height: 22px;
  border-radius: 50%;
  background: white;
  transition: 0.3s;
}

input:checked ~ label .slider {
  background: #007bff;
}

input:checked ~ label .slider:before {
  transform: translateX(30px);
}
